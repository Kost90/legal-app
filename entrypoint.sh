#!/usr/bin/env sh
set -e

echo "[$(date)] Waiting for DB ${DB_HOST}:${DB_PORT:-5432} ..."
# –ñ–¥–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞ –ë–î
ATTEMPTS=60
SLEEP=2
i=0
while ! nc -z "${DB_HOST}" "${DB_PORT:-5432}"; do
  i=$((i+1))
  if [ "$i" -ge "$ATTEMPTS" ]; then
    echo "DB is not up after $((ATTEMPTS*SLEEP))s. Giving up."
    exit 1
  fi
  echo "DB not ready yet ($i/$ATTEMPTS). Sleeping ${SLEEP}s..."
  sleep $SLEEP
done

# –ï—Å–ª–∏ –Ω—É–∂–Ω–æ ‚Äî –º–æ–∂–Ω–æ –ø—Ä–æ–≥–æ–Ω—è—Ç—å seed-—Å–∫—Ä–∏–ø—Ç—ã –∑–¥–µ—Å—å –∂–µ
echo "[$(date)] Running migrations..."
npm run migration:run

echo "[$(date)] Starting NestJS..."
exec npm run start:prod

# # new gpt:
# #!/usr/bin/env sh
# set -e

# echo "‚û°Ô∏è  Waiting for database $DB_HOST:$DB_PORT ..."
# # –ñ–¥—ë–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Postgres
# until pg_isready -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USERNAME" -d "$DB_DATABASE"; do
#   echo "‚è≥ Postgres is unavailable - sleeping"
#   sleep 2
# done
# echo "‚úÖ Postgres is ready"

# # –û–±–Ω–æ–≤–∏–º —Å—Ö–µ–º—É –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º —Å—Ç–∞—Ä—Ç–æ–º
# echo "‚û°Ô∏è  Running migrations..."
# npm run migration:run

# # –ï—Å–ª–∏ –≤ –∫–æ–¥–µ –Ω–µ —É—á—Ç–µ–Ω—ã –∞—Ä–≥—É–º–µ–Ω—Ç—ã puppeteer ‚Äî –ø–æ–¥—Ö–≤–∞—Ç—ã–≤–∞–µ–º –∏—Ö —á–µ—Ä–µ–∑ env
# export PUPPETEER_ARGS="${PUPPETEER_ARGS}"

# echo "üöÄ Starting NestJS on port ${PORT:-3030}"
# exec npm run start:prod